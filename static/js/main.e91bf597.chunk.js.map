{"version":3,"sources":["SpeechDaemon.js","AppStyles.js","components/MicrophoneSwitchStyles.js","components/app-icons.js","components/MicrophoneSwitch.js","components/NativeSpeaker.js","components/ButtonToConvertToTextFileThenDownload.js","components/InterimTranscript.js","components/StackHistory.js","App.js","serviceWorker.js","index.js"],"names":["SpeechDaemon","options","recognition","window","webkitSpeechRecognition","SpeechRecognition","interimResults","continuous","onresult","event","emit","onsoundstart","console","log","Date","onsoundend","onnomatch","onerror","onstart","timeStamp","onend","_","hasAlreadyStarted","isIdle","listen","this","lang_","v","replace","lang","start","stop","EventEmitter","styles","CircleSign","props","icon","CorrectSign","size","color","IncorrectSign","MicrophoneSign","VolumeUpSign","WindowsSign","AppleSign","AndroidSign","GithubSign","TrashSign","MicrophoneSwitch","isPowerOn","onClick","background","id","apply","useStyles","makeStyles","root","height","width","borderRadius","backgroundColor","border","cursor","NativeSpeaker","classes","onChangedSentence","onChangeVoice","onSpeak","sentence","selectedVoice","voices","rate","onChangedRate","volume","onChangedVolume","FormControl","required","fullWidth","variant","InputLabel","htmlFor","OutlinedInput","type","labelWidth","value","onChange","endAdornment","InputAdornment","position","IconButton","focusVisibleClassName","uttr","SpeechSynthesisUtterance","voice","speechSynthesis","speak","Grid","container","spacing","alignItems","item","Typography","gutterBottom","xs","Slider","min","max","step","valueLabelDisplay","aria-labelledby","shrink","Select","labelId","name","displayEmpty","map","i","MenuItem","key","ButtonToConvertToTextFileThenDownload","children","text","a","document","createElement","href","encodeURIComponent","download","moment","format","click","InterimTranscript","Row","index","style","data","histories","selectedIndex","setSelectedIndex","toggleItemRemove","ListItem","button","selected","target","ListItemIcon","Checkbox","edge","checked","willRemove","disableRipple","e","ListItemText","primary","StackHistory","title","onRemove","useState","filter","x","length","itemCount","itemSize","itemData","defaultProps","library","add","faMicrophone","faPlayCircle","faStopCircle","faVolumeUp","faCircle","fasCircle","faTimes","faWindows","faApple","faAndroid","faGithub","faTrash","langs","Array","prototype","skip","n","getVoices","arg","saveHistories","localStorage","setItem","JSON","stringify","App","speechLog","useRef","speech","dialect","setDialect","finalTranscript","setFinalTranscript","interimTranscript","setInterimTranscript","setIsPowerOn","setVoices","setSelectedVoice","setSentence","setRate","setVolume","setHistories","React","currentTab","setCurrentTab","setDefautVoice","match","reverse","defautVoice","useEffect","current","on","transcript","buf","resultIndex","results","isFinal","test","navigator","userAgent","confidence","error","onvoiceschanged","parse","getItem","locale","reduce","ax","push","includes","j","hasDialect","kill","handleChangedSentence","judgment","phrases","split","pattern","RegExp","pop","toLowerCase","Tabs","newValue","indicatorColor","textColor","centered","Tab","label","slice","direction","justify","display","disabled","visibility","padding","restart","sentences","items","concat","colSpan","Boolean","location","hostname","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.e91bf597.chunk.js","sourcesContent":["import {EventEmitter} from 'events';\r\n\r\nexport default class SpeechDaemon extends EventEmitter {\r\n  get lang() { return this.lang_ }\r\n  set lang(v) { this.lang_ = v.replace('_', '-') }// for Android\r\n\r\n  constructor(options) {\r\n    super()\r\n    const SpeechRecognition = window.webkitSpeechRecognition || window.SpeechRecognition;\r\n    const recognition = new SpeechRecognition();\r\n    recognition.interimResults = true;\r\n    recognition.continuous = true;\r\n\r\n    recognition.onresult = (event)=>{\r\n      this.emit(\"result\", event);\r\n    };\r\n    recognition.onsoundstart = (event) => {\r\n      console.log(`${new Date()}認識中...`)\r\n      this.emit(\"soundstart\", null);\r\n    };\r\n    recognition.onsoundend = () => { this.emit(\"soundend\", null) };\r\n    recognition.onnomatch = () => {\r\n      console.log(`${new Date()} 音声を認識できませんでした`)\r\n      this.emit('nomatch', null)\r\n    };\r\n    recognition.onerror = (event) => {\r\n      console.log(event)\r\n      this.emit('error', event)\r\n    };\r\n    recognition.onstart = (event) => {\r\n      console.log(`${new Date()} ${(event.timeStamp)} 音声認識サービス開始 ->>>>>`)\r\n      this.emit('start', null)\r\n    };\r\n    recognition.onend = _ => {\r\n      console.log(`${new Date()} <<<<<- 音声認識サービス切断`)\r\n      this.hasAlreadyStarted = false\r\n      this.emit('end', null)\r\n      if(this.isIdle) return;\r\n      this.listen()\r\n    };\r\n    this.recognition = recognition\r\n    this.isIdle = false\r\n    this.hasAlreadyStarted = false\r\n  }\r\n\r\n  listen() {\r\n    if(this.hasAlreadyStarted) {\r\n      return\r\n    }\r\n    this.hasAlreadyStarted = true\r\n    this.isIdle = false\r\n    if(this.lang) {\r\n      this.recognition.lang = this.lang\r\n    }\r\n    this.recognition.start();\r\n  }\r\n\r\n  kill() {\r\n    this.isIdle = true\r\n    this.recognition.stop();\r\n  }\r\n\r\n  restart() {\r\n    this.isIdle = false\r\n    this.recognition.stop();\r\n  }\r\n}","import css from 'styled-jsx/css'\r\nconst styles = css`\r\n.app {\r\n  text-align: center;\r\n}\r\n\r\n#results {\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n  border: 1px solid #ddd;\r\n  padding: 15px;\r\n  text-align: left;\r\n  min-height: 100px;\r\n}\r\n\r\n.recognition {position: relative;}\r\n\r\n.tools {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n}\r\n\r\n.qa {margin: 10px auto;}\r\n.text-left {text-align: left;}\r\n.footer a {\r\n  cursor: pointer;\r\n  color: black;\r\n  text-decoration: none;\r\n}\r\n`\r\n\r\nexport default styles","import css from 'styled-jsx/css'\r\n\r\nconst styles = css`\r\n.microphone-switch {\r\n  position: relative;\r\n}\r\n\r\n@keyframes shiny {\r\n  0% {\r\n    transform: scale(0) rotate(25deg);\r\n    opacity: 0;\r\n  }\r\n  50% {\r\n    transform: scale(1) rotate(25deg);\r\n    opacity: 1;\r\n  }\r\n  100% {\r\n    transform: scale(50) rotate(25deg);\r\n    opacity: 0;\r\n  }\r\n}\r\n\r\n.shiny-btn {\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n\r\n.shiny-btn::after {\r\n  content: '';\r\n  position: absolute;\r\n  top: -100px;\r\n  left: -100px;\r\n  width: 50px;\r\n  height: 50px;\r\n  background-image: linear-gradient(100deg, rgba(255, 255, 255, 0) 10%, rgba(255, 255, 255, 1) 100%, rgba(255, 255, 255, 0) 0%);\r\n  animation-name: shiny;\r\n  animation-duration: 2s;\r\n  animation-timing-function: ease-in-out;\r\n  animation-iteration-count: infinite;\r\n}\r\n\r\n.circle {\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n}\r\n\r\n.microphone-on,\r\n.microphone-off {\r\n  cursor: pointer;\r\n}\r\n\r\n.microphone-on {\r\n  background: #1373C7;\r\n  width: 48px;\r\n  height: 48px;\r\n  color: #FFF;\r\n}\r\n\r\n.microphone-off {\r\n  background: #FFF;\r\n  width: 38px;\r\n  height: 38px;\r\n  border: solid 5px #ED1C22;\r\n  color: #1373C7;\r\n}\r\n\r\n.heartbeat {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  animation: pounding .1s linear infinite alternate;\r\n  opacity: 0.2;\r\n  z-index: -99;\r\n  background: #1373C7;\r\n  width: 48px;\r\n  height: 48px;\r\n}\r\n\r\n@keyframes pounding {\r\n  0% {\r\n    transform: scale(1.3);\r\n  }\r\n  100% {\r\n    transform: scale(1);\r\n  }\r\n}\r\n`\r\n\r\nexport default styles","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nexport function CircleSign(props) {\r\n  return <FontAwesomeIcon icon='circle' {...props} />\r\n}\r\n\r\nexport function CorrectSign(props) {\r\n  return <FontAwesomeIcon icon={['far', 'circle']} size=\"2x\" color=\"green\" />\r\n}\r\n\r\nexport function IncorrectSign(props) {\r\n  return <FontAwesomeIcon icon=\"times\" size=\"2x\" color=\"red\" />\r\n}\r\n\r\nexport function MicrophoneSign(props) {\r\n  return <FontAwesomeIcon icon=\"microphone\" size=\"2x\" />\r\n}\r\n\r\nexport function VolumeUpSign(props) {\r\n  return <FontAwesomeIcon icon=\"volume-up\" size=\"1x\" />\r\n}\r\n\r\nexport function WindowsSign(props) {\r\n  return <FontAwesomeIcon icon={['fab', 'windows']} size=\"2x\" />\r\n}\r\n\r\nexport function AppleSign(props) {\r\n  return <FontAwesomeIcon icon={['fab', 'apple']} size=\"2x\" />\r\n}\r\n\r\nexport function AndroidSign(props) {\r\n  return <FontAwesomeIcon icon={['fab', 'android']} size=\"2x\" />\r\n}\r\n\r\nexport function GithubSign(props) {\r\n  return <FontAwesomeIcon icon={['fab', 'github']} size=\"2x\" />\r\n}\r\n\r\nexport function TrashSign(props) {\r\n  return <FontAwesomeIcon icon=\"trash\" {...props} />\r\n}","import React from 'react';\r\nimport styles from './MicrophoneSwitchStyles';\r\nimport { MicrophoneSign } from './app-icons';\r\n\r\nfunction MicrophoneSwitch(props) {\r\n  const { isPowerOn, onClick } = props\r\n  const background = props.background || '#1373C7'\r\n  const handleClick = _ => {\r\n    onClick && onClick.apply()\r\n  }\r\n\r\n  return (\r\n  <div className=\"microphone-switch\">\r\n    <div id=\"microphone\"\r\n         onClick={handleClick}\r\n         className={`circle microphone-${isPowerOn ? 'on shiny-btn' : 'off'}`}>\r\n      <div><MicrophoneSign /></div>\r\n    </div>\r\n    <div id=\"heartbeat\" className={`circle ${isPowerOn ? 'heartbeat' : ''}`}></div>\r\n\r\n    <style jsx>{styles}</style>\r\n  </div>)\r\n}\r\n\r\nexport default MicrophoneSwitch;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { VolumeUpSign } from './app-icons';\r\nimport {Grid, Slider, Typography, FormControl, Select, InputLabel, MenuItem,\r\n   OutlinedInput, InputAdornment, IconButton } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    height: \"48px\",\r\n    width: \"48px\",\r\n    borderRadius: \"50%\",\r\n    color: \"#fff\",\r\n    backgroundColor: \"#1976d2\",\r\n    border: 0,\r\n    cursor: \"pointer\",\r\n    \"&:hover\": {\r\n      color: \"#fff\",\r\n      backgroundColor: \"#1976d2\",\r\n    }\r\n  },\r\n});\r\n\r\nfunction NativeSpeaker(props) {\r\n  const classes = useStyles();\r\n  const {\r\n    onChangedSentence, onChangeVoice, onSpeak,\r\n    sentence, selectedVoice, voices,\r\n    rate, onChangedRate,\r\n    volume, onChangedVolume\r\n  } = props\r\n\r\n  const handleSpeak = _ => {\r\n    onSpeak && onSpeak(sentence)\r\n    const uttr = new SpeechSynthesisUtterance(sentence)\r\n    uttr.voice = selectedVoice\r\n    uttr.lang = selectedVoice.lang.replace('_', '-')// for Android\r\n    if(rate && (rate >= 0.1 && rate <= 10)) {\r\n      uttr.rate = rate\r\n    }\r\n    if(volume && (volume >= 0 && volume <= 1)) {\r\n      uttr.volume = volume\r\n    }\r\n    speechSynthesis.speak(uttr)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <FormControl required fullWidth variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-adornment-sentence\">台詞</InputLabel>\r\n        <OutlinedInput\r\n          id=\"outlined-adornment-sentence\"\r\n          type='text'\r\n          labelWidth={50}\r\n          value={sentence}\r\n          onChange={onChangedSentence}\r\n          endAdornment={\r\n            <InputAdornment position=\"end\">\r\n              <IconButton focusVisibleClassName={\"a\"} classes={{root: classes.root}} onClick={handleSpeak} size=\"small\"><VolumeUpSign /></IconButton>\r\n            </InputAdornment>\r\n          }\r\n          \r\n        />\r\n      </FormControl>\r\n      {/*\r\n      <button onClick={_ => speechSynthesis.pause()}>一時停止</button>\r\n      <button onClick={_ => speechSynthesis.resume()}>再開</button>\r\n      */}\r\n\r\n      <Grid container spacing={2} alignItems=\"center\">\r\n        <Grid item>\r\n          <Typography id=\"input-slider\" gutterBottom>速度</Typography>\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Slider min={0.1} max={10.0} step={0.1} value={rate}\r\n                  onChange={onChangedRate}\r\n                  valueLabelDisplay=\"auto\"\r\n                  aria-labelledby=\"input-slider\" />\r\n        </Grid>\r\n        <Grid item><Typography>{rate}</Typography></Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={2} alignItems=\"center\">\r\n        <Grid item>\r\n          <Typography id=\"volume-slider\" gutterBottom>音量</Typography>\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Slider min={0} max={1} step={0.1} value={volume}\r\n                  onChange={onChangedVolume}\r\n                  valueLabelDisplay=\"auto\"\r\n                  aria-labelledby=\"volume-slider\" />\r\n        </Grid>\r\n        <Grid item><Typography>{volume}</Typography></Grid>\r\n      </Grid>\r\n\r\n      <FormControl>\r\n        <InputLabel shrink id=\"selectVoicesLabel\">\r\n          言語\r\n        </InputLabel>\r\n        <Select\r\n          labelId=\"selectVoicesLabel\"\r\n          value={selectedVoice.name}\r\n          onChange={onChangeVoice}\r\n          displayEmpty\r\n        >\r\n        {\r\n          voices\r\n          .map((voice, i) => {\r\n            return (<MenuItem key={i} value={voice.name}>{`${voice.name} (${voice.lang})`}</MenuItem>)\r\n          })            \r\n        }\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NativeSpeaker;","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nexport default function ButtonToConvertToTextFileThenDownload(props) {\r\n  const {children, text} = props\r\n  const downloadTextFile = () => {\r\n    const a = document.createElement('a');\r\n    a.href = 'data:text/plain,' + encodeURIComponent(text);\r\n    a.download = `log${moment().format('_YYYYMMDD_HHmmss')}.txt`;\r\n    a.click();\r\n  }\r\n\r\n   return (<button onClick={downloadTextFile}>{children}</button>)\r\n}","import React from 'react';\r\n\r\nexport default function InterimTranscript(props) {\r\n  return (\r\n  <>\r\n    <span>{props.children}</span>\r\n    <style jsx>{`\r\n    span {color: gray;}\r\n    `}</style>\r\n  </>)\r\n}","import React, { useState } from 'react';\r\nimport { ListItem, ListItemText, ListItemIcon, Checkbox, IconButton } from '@material-ui/core';\r\nimport { FixedSizeList } from 'react-window';\r\nimport { TrashSign, CircleSign } from './app-icons';\r\n\r\nconst NUMBER_OF_ROWS = 7\r\n\r\nconst Row = ({ index, style, data }) => {\r\n  const { histories, selectedIndex, setSelectedIndex, onChange, toggleItemRemove } = data;\r\n  const handleClick = _ => {\r\n    setSelectedIndex(index)\r\n    histories[index] && onChange && onChange({target:{value: histories[index].sentence}})\r\n  }\r\n  const handleChange = e => {\r\n    const checked = e.target.checked\r\n    toggleItemRemove && toggleItemRemove({checked, index})\r\n  }\r\n\r\n  return (\r\n    <ListItem button style={style} key={index} selected={selectedIndex === index} onClick={handleClick}>\r\n      <ListItemIcon>\r\n        <Checkbox\r\n          edge=\"start\"\r\n          checked={!!histories[index].willRemove}\r\n          icon={<CircleSign color=\"#1976d2\" />}\r\n          disableRipple\r\n          onChange={handleChange}\r\n        />\r\n      </ListItemIcon>\r\n      <ListItemText primary={histories[index].sentence} />\r\n    </ListItem>\r\n  )\r\n}\r\n\r\nexport default function StackHistory(props) {\r\n  const { title, histories, onChange, size, onRemove, toggleItemRemove } = props\r\n  const [selectedIndex, setSelectedIndex] = useState(null)\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"stack-history-header\">\r\n        <span>\r\n          {(histories.filter(x => x.willRemove).length > 0) &&\r\n            <IconButton onClick={onRemove}><TrashSign /></IconButton>\r\n          }\r\n        </span>\r\n        <p>{title}</p>\r\n      </div>\r\n\r\n      <FixedSizeList\r\n        height={size * NUMBER_OF_ROWS}\r\n        itemCount={histories.length}\r\n        itemSize={size}\r\n        width={\"100%\"}\r\n        itemData={{histories, selectedIndex, setSelectedIndex, onChange, toggleItemRemove}}\r\n      >\r\n        {Row}\r\n      </FixedSizeList>\r\n      <style jsx>{`\r\n      .stack-history-header { position: relative; }\r\n      .stack-history-header span {\r\n        position: absolute;\r\n        right: 10px;\r\n      }\r\n      `}</style>\r\n    </div>\r\n  )\r\n}\r\n\r\nStackHistory.defaultProps = {\r\n  title: '履歴',\r\n  size: 35,\r\n};","import React, { useState, useEffect, useRef } from 'react';\r\nimport './App.css';\r\nimport SpeechDaemon from './SpeechDaemon';\r\nimport styles from './AppStyles';\r\nimport MicrophoneSwitch from './components/MicrophoneSwitch';\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faMicrophone, faPlayCircle, faStopCircle, faVolumeUp, faTimes, faTrash, faCircle as fasCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport { faCircle } from '@fortawesome/free-regular-svg-icons';\r\nimport { faWindows, faApple, faAndroid, faGithub } from '@fortawesome/free-brands-svg-icons';\r\nimport NativeSpeaker from './components/NativeSpeaker';\r\nimport { CorrectSign, IncorrectSign, WindowsSign, AppleSign, AndroidSign, GithubSign } from './components/app-icons';\r\nimport ButtonToConvertToTextFileThenDownload from './components/ButtonToConvertToTextFileThenDownload';\r\nimport { Typography , Grid, Tabs, Tab } from '@material-ui/core';\r\nimport InterimTranscript from './components/InterimTranscript';\r\nimport StackHistory from './components/StackHistory';\r\n\r\nlibrary.add(faMicrophone, faPlayCircle, faStopCircle, faVolumeUp, faCircle, fasCircle, faTimes, faWindows, faApple, faAndroid, faGithub, faTrash)\r\n\r\nvar langs =\r\n[['Afrikaans',       ['af-ZA']],\r\n ['አማርኛ',           ['am-ET']],\r\n ['Azərbaycanca',    ['az-AZ']],\r\n ['বাংলা',            ['bn-BD', 'বাংলাদেশ'],\r\n                     ['bn-IN', 'ভারত']],\r\n ['Bahasa Indonesia',['id-ID']],\r\n ['Bahasa Melayu',   ['ms-MY']],\r\n ['Català',          ['ca-ES']],\r\n ['Čeština',         ['cs-CZ']],\r\n ['Dansk',           ['da-DK']],\r\n ['Deutsch',         ['de-DE']],\r\n ['English',         ['en-AU', 'Australia'],\r\n                     ['en-CA', 'Canada'],\r\n                     ['en-IN', 'India'],\r\n                     ['en-KE', 'Kenya'],\r\n                     ['en-TZ', 'Tanzania'],\r\n                     ['en-GH', 'Ghana'],\r\n                     ['en-NZ', 'New Zealand'],\r\n                     ['en-NG', 'Nigeria'],\r\n                     ['en-ZA', 'South Africa'],\r\n                     ['en-PH', 'Philippines'],\r\n                     ['en-GB', 'United Kingdom'],\r\n                     ['en-US', 'United States']],\r\n ['Español',         ['es-AR', 'Argentina'],\r\n                     ['es-BO', 'Bolivia'],\r\n                     ['es-CL', 'Chile'],\r\n                     ['es-CO', 'Colombia'],\r\n                     ['es-CR', 'Costa Rica'],\r\n                     ['es-EC', 'Ecuador'],\r\n                     ['es-SV', 'El Salvador'],\r\n                     ['es-ES', 'España'],\r\n                     ['es-US', 'Estados Unidos'],\r\n                     ['es-GT', 'Guatemala'],\r\n                     ['es-HN', 'Honduras'],\r\n                     ['es-MX', 'México'],\r\n                     ['es-NI', 'Nicaragua'],\r\n                     ['es-PA', 'Panamá'],\r\n                     ['es-PY', 'Paraguay'],\r\n                     ['es-PE', 'Perú'],\r\n                     ['es-PR', 'Puerto Rico'],\r\n                     ['es-DO', 'República Dominicana'],\r\n                     ['es-UY', 'Uruguay'],\r\n                     ['es-VE', 'Venezuela']],\r\n ['Euskara',         ['eu-ES']],\r\n ['Filipino',        ['fil-PH']],\r\n ['Français',        ['fr-FR']],\r\n ['Basa Jawa',       ['jv-ID']],\r\n ['Galego',          ['gl-ES']],\r\n ['ગુજરાતી',           ['gu-IN']],\r\n ['Hrvatski',        ['hr-HR']],\r\n ['IsiZulu',         ['zu-ZA']],\r\n ['Íslenska',        ['is-IS']],\r\n ['Italiano',        ['it-IT', 'Italia'],\r\n                     ['it-CH', 'Svizzera']],\r\n ['ಕನ್ನಡ',             ['kn-IN']],\r\n ['ភាសាខ្មែរ',          ['km-KH']],\r\n ['Latviešu',        ['lv-LV']],\r\n ['Lietuvių',        ['lt-LT']],\r\n ['മലയാളം',          ['ml-IN']],\r\n ['मराठी',             ['mr-IN']],\r\n ['Magyar',          ['hu-HU']],\r\n ['ລາວ',              ['lo-LA']],\r\n ['Nederlands',      ['nl-NL']],\r\n ['नेपाली भाषा',        ['ne-NP']],\r\n ['Norsk bokmål',    ['nb-NO']],\r\n ['Polski',          ['pl-PL']],\r\n ['Português',       ['pt-BR', 'Brasil'],\r\n                     ['pt-PT', 'Portugal']],\r\n ['Română',          ['ro-RO']],\r\n ['සිංහල',          ['si-LK']],\r\n ['Slovenščina',     ['sl-SI']],\r\n ['Basa Sunda',      ['su-ID']],\r\n ['Slovenčina',      ['sk-SK']],\r\n ['Suomi',           ['fi-FI']],\r\n ['Svenska',         ['sv-SE']],\r\n ['Kiswahili',       ['sw-TZ', 'Tanzania'],\r\n                     ['sw-KE', 'Kenya']],\r\n ['ქართული',       ['ka-GE']],\r\n ['Հայերեն',          ['hy-AM']],\r\n ['தமிழ்',            ['ta-IN', 'இந்தியா'],\r\n                     ['ta-SG', 'சிங்கப்பூர்'],\r\n                     ['ta-LK', 'இலங்கை'],\r\n                     ['ta-MY', 'மலேசியா']],\r\n ['తెలుగు',           ['te-IN']],\r\n ['Tiếng Việt',      ['vi-VN']],\r\n ['Türkçe',          ['tr-TR']],\r\n ['اُردُو',            ['ur-PK', 'پاکستان'],\r\n                     ['ur-IN', 'بھارت']],\r\n ['Ελληνικά',         ['el-GR']],\r\n ['български',         ['bg-BG']],\r\n ['Pусский',          ['ru-RU']],\r\n ['Српски',           ['sr-RS']],\r\n ['Українська',        ['uk-UA']],\r\n ['한국어',            ['ko-KR']],\r\n ['中文',             ['cmn-Hans-CN', '普通话 (中国大陆)'],\r\n                     ['cmn-Hans-HK', '普通话 (香港)'],\r\n                     ['cmn-Hant-TW', '中文 (台灣)'],\r\n                     ['yue-Hant-HK', '粵語 (香港)']],\r\n ['日本語',           ['ja-JP']],\r\n ['हिन्दी',             ['hi-IN']],\r\n ['ภาษาไทย',         ['th-TH']]];\r\n\r\nif(!Array.prototype.skip) {\r\n  Array.prototype.skip = function(n) {\r\n    if(n < 1) return this\r\n    return this.filter((v, i) => i > (n - 1))\r\n  }  \r\n}\r\n\r\nconst getVoices = (arg) => {\r\n  return window.speechSynthesis.getVoices().filter(arg || (voice => voice))\r\n}\r\nconst getVoiceByName = (name) => {\r\n  return getVoices(voice => voice.name === name)[0]\r\n}\r\nconst indexOfLangsByLocale = (locale) => {\r\n  return langs.reduce((ax, lang, i) => {\r\n    const exists = lang.skip(1).reduce((xs, x) => {\r\n      xs.push(x[0]);\r\n      return xs;\r\n    }, []).includes(locale)\r\n\r\n    \r\n    if(exists) {\r\n      ax = i\r\n      console.log(`exists ${i}`)\r\n    }\r\n    return ax\r\n  }, null)\r\n}\r\nconst isAndroid = () => /(android)/i.test(navigator.userAgent)\r\n\r\nconst saveHistories = x => window.localStorage.setItem('histories', JSON.stringify(x))\r\n\r\nfunction App() {\r\n  const speechLog = useRef('');\r\n  const speech = useRef();\r\n  const [selectedIndex, setSelectedIndex] = useState(null);\r\n  const [dialect, setDialect] = useState();\r\n  const [finalTranscript, setFinalTranscript] = useState('');\r\n  const [interimTranscript, setInterimTranscript] = useState('');\r\n  const [isPowerOn, setIsPowerOn] = useState(false);\r\n  const [voices, setVoices] = useState([]);\r\n  const [selectedVoice, setSelectedVoice] = useState(null);\r\n  const [sentence, setSentence] = useState(\"I'm going to make him an offer he can't refuse.\");\r\n  const [rate, setRate] = useState(1);\r\n  const [volume, setVolume] = useState(1);\r\n  const [histories, setHistories] = useState([]);\r\n  const [currentTab, setCurrentTab] = React.useState(0);\r\n\r\n  const setDefautVoice = () => {\r\n    // 日本語と英語以外の声は選択肢に追加しない。\r\n    const voices = getVoices(voice => voice.lang.match('ja|en[-_]US')).reverse()\r\n    const defautVoice = voices.filter(voice => voice.lang.match('en[-_]US') /*&& /^google/i.test(voice.name)*/)[0]\r\n    defautVoice && setSelectedVoice(defautVoice)\r\n    setVoices(voices)\r\n  }\r\n  const initialize = _ => {\r\n    console.log('初期化処理')\r\n    speech.current = new SpeechDaemon()\r\n    speech.current.on('result', (event) => {\r\n      let transcript = ''\r\n      let buf = ''\r\n      for (let i = event.resultIndex; i < event.results.length; i++) {\r\n        transcript = event.results[i][0].transcript;\r\n        if (event.results[i].isFinal && (!isAndroid() || event.results[i][0].confidence > 0)) {\r\n          if (speech.current.lang === 'ja-JP') {\r\n            transcript += '。';\r\n          }\r\n          speechLog.current += transcript + '\\n'\r\n          console.log(speechLog.current)\r\n          setFinalTranscript(speechLog.current)\r\n        } else {\r\n          buf += transcript\r\n        }\r\n        setInterimTranscript(buf)\r\n      }\r\n    })\r\n    .on('start', () => {\r\n      console.log(\"話しかけてみて\")\r\n    }).on('soundstart', () => {\r\n      console.log(\"認識中...\")\r\n    }).on('soundend', () => {\r\n      console.log(\"停止中\")\r\n    }).on('nomatch', (event) => {\r\n      console.log('音声を認識できませんでした')\r\n    }).on('error', (event) => {\r\n      console.log('エラー: ' + event.error)\r\n    })\r\n\r\n    window.speechSynthesis.onvoiceschanged = _ => {\r\n      console.log('onvoiceschanged')\r\n      setDefautVoice()\r\n    }\r\n    setDefautVoice()\r\n\r\n    const histories = JSON.parse(localStorage.getItem(\"histories\"))\r\n    /* 昔のフォーマットを新フォーマットへ変換 */\r\n    .map(x => {\r\n      if(typeof x === 'string') {\r\n        return { sentence: x }\r\n      }\r\n      return x\r\n    })\r\n    if(!histories) return\r\n    setHistories(histories)\r\n  }\r\n  \r\n  useEffect(initialize, [])\r\n\r\n  useEffect(_ => {\r\n    console.log('changed selectedVoice')\r\n    if(!selectedVoice) return\r\n\r\n    const i = indexOfLangsByLocale(selectedVoice.lang.replace('_', '-'))\r\n    setSelectedIndex(i)\r\n\r\n    setDialect(langs[i].filter((a, j) => j > 0).reduce((xs, x) => {\r\n      if(x[0] === selectedVoice.lang.replace('_', '-')) xs = x\r\n      return xs\r\n    })[0])\r\n  }, [selectedVoice])\r\n\r\n  if(!selectedVoice || !selectedIndex) {\r\n    console.log('音声取得中')\r\n    return (<>音声取得中</>)\r\n  }\r\n\r\n  const hasDialect = langs[selectedIndex][1].length > 1\r\n\r\n  if(isPowerOn) {\r\n    console.log('Microphone On')\r\n    speech.current.lang = dialect\r\n    speech.current.listen()\r\n  } else {\r\n    console.log('onMicrophone Off')\r\n    speech.current.kill()\r\n  }\r\n\r\n  const latelyTranscript = (n) => {\r\n    return finalTranscript.split('\\n')\r\n      .filter(x => x.length > 0)\r\n      .slice(-1 * n)\r\n      .map((x, i) => <p key={i}>{x}</p>)\r\n  }\r\n\r\n  const handleChangedSentence = e => setSentence(e.target.value)\r\n\r\n  const judgment = (_ => {\r\n    const phrases = speechLog.current.split('\\n').filter(x => x.length > 0)\r\n    if(phrases.length > 0) {\r\n      const pattern = new RegExp(/[\\s!',\\.、。]/, 'g')\r\n      const [actual, expected] = [phrases.pop(), sentence].map(x => x.replace(pattern, '').toLowerCase())\r\n      return (actual === expected) ? <CorrectSign /> : <IncorrectSign />\r\n    } else {\r\n      return (<></>)\r\n    }\r\n  })()\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Typography>ドラマ・映画の名言をシャドーイング</Typography>\r\n\r\n      <Tabs\r\n        value={currentTab}\r\n        onChange={(event, newValue) => {\r\n          setCurrentTab(newValue);\r\n        }}\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n        centered\r\n      >\r\n        <Tab label=\"ホーム\" />\r\n        <Tab label=\"過去の台詞\" />\r\n      </Tabs>\r\n      {currentTab === 0 && (<>\r\n\r\n      {judgment}\r\n\r\n      <div className=\"recognition\">\r\n        <div id=\"results\">\r\n          <span className=\"final\" id=\"final_span\">{latelyTranscript(5)}</span>\r\n          <InterimTranscript>{interimTranscript}</InterimTranscript>\r\n        </div>\r\n        <div className=\"tools\">\r\n          <Grid container direction=\"column\" justify=\"space-around\" alignItems=\"center\">\r\n            <Grid item>\r\n              <div style={{display: 'none'}}>\r\n                <select disabled={true} value={selectedIndex}>\r\n                {\r\n                  langs.map((x, i) => <option key={x[0]} value={i}>{x[0]}</option>)\r\n                }\r\n                </select>&nbsp;&nbsp; \r\n                <select disabled={true} value={dialect} style={{visibility: hasDialect ? 'visible' : 'hidden'}}>\r\n                {\r\n                  langs[selectedIndex]\r\n                    .filter((x, i) => i > 0)\r\n                    .map((x ,i) => <option key={i} value={x[0]}>{x[1]||''}</option>)\r\n                }\r\n                </select>\r\n              </div>\r\n            </Grid>\r\n          \r\n            <Grid item>\r\n              <ButtonToConvertToTextFileThenDownload text={finalTranscript}>\r\n                ログをダウンロード\r\n              </ButtonToConvertToTextFileThenDownload>\r\n            </Grid>\r\n            <Grid item>\r\n              <div style={{padding: \"10px\"}}>\r\n              <MicrophoneSwitch isPowerOn={isPowerOn}\r\n                              onClick={() => {setIsPowerOn(!isPowerOn)}} />\r\n              </div>\r\n            </Grid>          \r\n          </Grid>\r\n        </div>\r\n      </div>\r\n      <br/>\r\n      <NativeSpeaker sentence={sentence}\r\n        selectedVoice={selectedVoice}\r\n        voices={voices}\r\n        onChangedSentence={handleChangedSentence}\r\n        onChangeVoice={e => {\r\n          const voice = getVoiceByName(e.target.value)\r\n          setSelectedVoice(voice)\r\n          speech.current.lang = voice.lang\r\n          speech.current.restart()\r\n        }}\r\n        onSpeak={_ => {\r\n          let sentences = [{sentence}, ...histories.filter(x => x.sentence !== sentence)]\r\n          setHistories(sentences)\r\n          saveHistories(sentences)\r\n        }}\r\n        rate={rate} onChangedRate={(e, newValue) => setRate(newValue)}\r\n        volume={volume} onChangedVolume={(e, newValue) => setVolume(newValue)} />\r\n      </>)}\r\n\r\n      {currentTab === 1 && (\r\n        <StackHistory histories={histories}\r\n          toggleItemRemove={({checked, index}) => {\r\n            const items = histories.concat();\r\n            items[index].willRemove = checked\r\n            setHistories(items)\r\n          }}\r\n          onRemove={_ => {\r\n            const items = histories.filter(x => !x.willRemove).concat();\r\n            setHistories(items)\r\n            saveHistories(items)\r\n          }} \r\n          onChange={handleChangedSentence} />)}\r\n\r\n      <h2>よくある質問</h2>\r\n      <h3>使用方法を教えて？</h3>\r\n      <ol className=\"text-left\">\r\n        <li>ドラマ・映画の名言を入力しましょう。</li>\r\n        <li>スピーカーアイコンをタップして、発音を聞きます。</li>\r\n        <li>マイクアイコンをタップして、マイクONにします。</li>\r\n        <li>役者になったつもりで、聞こえたとおりに喋ってみましょう。</li>\r\n      </ol>\r\n\r\n      <h3>動作しないけど...</h3>\r\n      Chromeブラウザで動作します。\r\n      <table className=\"qa\">\r\n        <thead>\r\n          <tr>\r\n            <th colSpan=\"2\">対応デバイス</th>\r\n            <th>可否</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td><WindowsSign/></td>\r\n            <td className=\"text-left\">PC</td>\r\n            <td><CorrectSign/></td>\r\n          </tr>\r\n          <tr>\r\n            <td><AndroidSign/></td>\r\n            <td className=\"text-left\">Android</td>\r\n            <td><CorrectSign/></td>\r\n          </tr>\r\n          <tr>\r\n            <td><AppleSign/></td>\r\n            <td className=\"text-left\">iPhone</td>\r\n            <td><IncorrectSign/></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n\r\n      <hr/>\r\n\r\n      <div className=\"footer\">\r\n        <a target=\"_blank\" href=\"https://github.com/GangDuo/shadowing\"><GithubSign />GitHub</a>\r\n      </div>\r\n\r\n      <style jsx>{styles}</style>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}