{"version":3,"sources":["SpeechDaemon.js","AppStyles.js","components/MicrophoneSwitchStyles.js","components/app-icons.js","components/MicrophoneSwitch.js","components/NativeSpeaker.js","components/ButtonToConvertToTextFileThenDownload.js","App.js","serviceWorker.js","index.js"],"names":["SpeechDaemon","options","recognition","window","webkitSpeechRecognition","SpeechRecognition","interimResults","continuous","onresult","event","emit","onsoundstart","console","log","Date","onsoundend","onnomatch","onerror","onstart","timeStamp","onend","_","hasAlreadyStarted","isIdle","listen","this","lang_","v","replace","lang","start","stop","EventEmitter","styles","CorrectSign","props","icon","size","color","IncorrectSign","MicrophoneSign","VolumeUpSign","MicrophoneSwitch","isPowerOn","onClick","background","id","apply","NativeSpeaker","useState","histories","setHistories","onChangedSentence","onChangeVoice","sentence","selectedVoice","voices","rate","onChangedRate","volume","onChangedVolume","useEffect","JSON","parse","localStorage","getItem","value","onChange","sentences","includes","filter","x","setItem","stringify","uttr","SpeechSynthesisUtterance","voice","speechSynthesis","speak","type","min","max","step","name","map","i","key","htmlFor","e","target","ButtonToConvertToTextFileThenDownload","children","text","a","document","createElement","href","encodeURIComponent","download","moment","format","click","library","add","faMicrophone","faPlayCircle","faStopCircle","faVolumeUp","faCircle","faTimes","langs","Array","prototype","skip","n","getVoices","arg","App","speechLog","useRef","speech","selectedIndex","setSelectedIndex","dialect","setDialect","finalTranscript","setFinalTranscript","interimTranscript","setInterimTranscript","setIsPowerOn","setVoices","setSelectedVoice","setSentence","setRate","setVolume","setDefautVoice","match","reverse","defautVoice","current","on","transcript","buf","resultIndex","results","length","isFinal","test","navigator","userAgent","confidence","error","onvoiceschanged","locale","reduce","ax","xs","push","j","hasDialect","kill","judgment","phrases","split","pattern","RegExp","pop","toLowerCase","restart","slice","style","disabled","visibility","Boolean","location","hostname","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.49ca2db1.chunk.js","sourcesContent":["import {EventEmitter} from 'events';\r\n\r\nexport default class SpeechDaemon extends EventEmitter {\r\n  get lang() { return this.lang_ }\r\n  set lang(v) { this.lang_ = v.replace('_', '-') }// for Android\r\n\r\n  constructor(options) {\r\n    super()\r\n    const SpeechRecognition = window.webkitSpeechRecognition || window.SpeechRecognition;\r\n    const recognition = new SpeechRecognition();\r\n    recognition.interimResults = true;\r\n    recognition.continuous = true;\r\n\r\n    recognition.onresult = (event)=>{\r\n      this.emit(\"result\", event);\r\n    };\r\n    recognition.onsoundstart = (event) => {\r\n      console.log(`${new Date()}認識中...`)\r\n      this.emit(\"soundstart\", null);\r\n    };\r\n    recognition.onsoundend = () => { this.emit(\"soundend\", null) };\r\n    recognition.onnomatch = () => {\r\n      console.log(`${new Date()} 音声を認識できませんでした`)\r\n      this.emit('nomatch', null)\r\n    };\r\n    recognition.onerror = (event) => {\r\n      console.log(event)\r\n      this.emit('error', event)\r\n    };\r\n    recognition.onstart = (event) => {\r\n      console.log(`${new Date()} ${(event.timeStamp)} 音声認識サービス開始 ->>>>>`)\r\n      this.emit('start', null)\r\n    };\r\n    recognition.onend = _ => {\r\n      console.log(`${new Date()} <<<<<- 音声認識サービス切断`)\r\n      this.hasAlreadyStarted = false\r\n      this.emit('end', null)\r\n      if(this.isIdle) return;\r\n      this.listen()\r\n    };\r\n    this.recognition = recognition\r\n    this.isIdle = false\r\n    this.hasAlreadyStarted = false\r\n  }\r\n\r\n  listen() {\r\n    if(this.hasAlreadyStarted) {\r\n      return\r\n    }\r\n    this.hasAlreadyStarted = true\r\n    this.isIdle = false\r\n    if(this.lang) {\r\n      this.recognition.lang = this.lang\r\n    }\r\n    this.recognition.start();\r\n  }\r\n\r\n  kill() {\r\n    this.isIdle = true\r\n    this.recognition.stop();\r\n  }\r\n\r\n  restart() {\r\n    this.isIdle = false\r\n    this.recognition.stop();\r\n  }\r\n}","import css from 'styled-jsx/css'\r\nconst styles = css`\r\n.app {\r\n  text-align: center;\r\n}\r\n\r\n#results {\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n  border: 1px solid #ddd;\r\n  padding: 15px;\r\n  text-align: left;\r\n  min-height: 100px;\r\n}\r\n\r\n.tools {\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n`\r\n\r\nexport default styles","import css from 'styled-jsx/css'\r\n\r\nconst styles = css`\r\n.microphone-switch {\r\n  position: relative;\r\n}\r\n\r\n@keyframes shiny {\r\n  0% {\r\n    transform: scale(0) rotate(25deg);\r\n    opacity: 0;\r\n  }\r\n  50% {\r\n    transform: scale(1) rotate(25deg);\r\n    opacity: 1;\r\n  }\r\n  100% {\r\n    transform: scale(50) rotate(25deg);\r\n    opacity: 0;\r\n  }\r\n}\r\n\r\n.shiny-btn {\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n\r\n.shiny-btn::after {\r\n  content: '';\r\n  position: absolute;\r\n  top: -100px;\r\n  left: -100px;\r\n  width: 50px;\r\n  height: 50px;\r\n  background-image: linear-gradient(100deg, rgba(255, 255, 255, 0) 10%, rgba(255, 255, 255, 1) 100%, rgba(255, 255, 255, 0) 0%);\r\n  animation-name: shiny;\r\n  animation-duration: 2s;\r\n  animation-timing-function: ease-in-out;\r\n  animation-iteration-count: infinite;\r\n}\r\n\r\n.circle {\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n}\r\n\r\n.microphone-on,\r\n.microphone-off {\r\n  cursor: pointer;\r\n}\r\n\r\n.microphone-on {\r\n  background: #1373C7;\r\n  width: 80px;\r\n  height: 80px;\r\n  color: #FFF;\r\n}\r\n\r\n.microphone-off {\r\n  background: #FFF;\r\n  width: 70px;\r\n  height: 70px;\r\n  border: solid 5px #ED1C22;\r\n  color: #1373C7;\r\n}\r\n\r\n.heartbeat {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  animation: pounding .1s linear infinite alternate;\r\n  opacity: 0.2;\r\n  z-index: -99;\r\n  background: #1373C7;\r\n  width: 80px;\r\n  height: 80px;\r\n}\r\n\r\n@keyframes pounding {\r\n  0% {\r\n    transform: scale(1.3);\r\n  }\r\n  100% {\r\n    transform: scale(1);\r\n  }\r\n}\r\n`\r\n\r\nexport default styles","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nexport function CorrectSign(props) {\r\n  return <FontAwesomeIcon icon={['far', 'circle']} size=\"2x\" color=\"green\" />\r\n}\r\n\r\nexport function IncorrectSign(props) {\r\n  return <FontAwesomeIcon icon=\"times\" size=\"2x\" color=\"red\" />\r\n}\r\n\r\nexport function MicrophoneSign(props) {\r\n  return <FontAwesomeIcon icon=\"microphone\" size=\"2x\" />\r\n}\r\n\r\nexport function VolumeUpSign(props) {\r\n  return <FontAwesomeIcon icon=\"volume-up\" size=\"2x\" />\r\n}","import React from 'react';\r\nimport styles from './MicrophoneSwitchStyles';\r\nimport { MicrophoneSign } from './app-icons';\r\n\r\nfunction MicrophoneSwitch(props) {\r\n  const { isPowerOn, onClick } = props\r\n  const background = props.background || '#1373C7'\r\n  const handleClick = _ => {\r\n    onClick && onClick.apply()\r\n  }\r\n\r\n  return (\r\n  <div className=\"microphone-switch\">\r\n    <div id=\"microphone\"\r\n         onClick={handleClick}\r\n         className={`circle microphone-${isPowerOn ? 'on shiny-btn' : 'off'}`}>\r\n      <div><MicrophoneSign /></div>\r\n    </div>\r\n    <div id=\"heartbeat\" className={`circle ${isPowerOn ? 'heartbeat' : ''}`}></div>\r\n\r\n    <style jsx>{styles}</style>\r\n  </div>)\r\n}\r\n\r\nexport default MicrophoneSwitch;","import React, { useState, useEffect } from 'react';\r\nimport { VolumeUpSign } from './app-icons';\r\n\r\nfunction NativeSpeaker(props) {\r\n  const [histories, setHistories] = useState([]);\r\n  const {\r\n    onChangedSentence, onChangeVoice,\r\n    sentence, selectedVoice, voices,\r\n    rate, onChangedRate,\r\n    volume, onChangedVolume\r\n  } = props\r\n\r\n  useEffect(_ => {\r\n    const histories = JSON.parse(localStorage.getItem(\"histories\"))\r\n    if(!histories) return\r\n    setHistories(histories)\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <input className=\"text\"\r\n             value={sentence} onChange={onChangedSentence} />\r\n      <button onClick={_ => {\r\n        let sentences = [sentence, ...histories]\r\n        if(histories.includes(sentence)) {\r\n          sentences = [sentence, ...histories.filter(x => x !== sentence)]\r\n        }\r\n        setHistories(sentences)\r\n        window.localStorage.setItem('histories', JSON.stringify(sentences))\r\n        const uttr = new SpeechSynthesisUtterance(sentence)\r\n        uttr.voice = selectedVoice\r\n        uttr.lang = selectedVoice.lang.replace('_', '-')// for Android\r\n        if(rate && (rate >= 0.1 && rate <= 10)) {\r\n          uttr.rate = rate\r\n        }\r\n        if(volume && (volume >= 0 && volume <= 1)) {\r\n          uttr.volume = volume\r\n        }\r\n        speechSynthesis.speak(uttr)\r\n      }}><VolumeUpSign /></button>\r\n      {/*\r\n      <button onClick={_ => speechSynthesis.pause()}>一時停止</button>\r\n      <button onClick={_ => speechSynthesis.resume()}>再開</button>\r\n      */}\r\n\r\n      <div>速度×{rate}<input type=\"range\" min=\"0.1\" max=\"10.0\" step=\"0.1\" value={rate} onChange={onChangedRate} /></div>\r\n      <div>音量×{volume}<input type=\"range\" min=\"0\" max=\"1\" step=\"0.1\" value={volume} onChange={onChangedVolume} /></div>\r\n\r\n      <select value={selectedVoice.name}\r\n              onChange={onChangeVoice}>\r\n        {\r\n          voices\r\n          .map((voice, i) => {\r\n            return (<option key={i} value={voice.name}>{`${voice.name} (${voice.lang})`}</option>)\r\n          })            \r\n        }\r\n      </select>\r\n\r\n      <div>\r\n        <label htmlFor=\"histories\">履歴</label>\r\n        <select id=\"histories\" size=\"5\"\r\n                onChange={e => {e.target.value && onChangedSentence && onChangedSentence(e)}}>\r\n          {histories.map((x, i) => <option key={i} value={x}>{x}</option>)}\r\n        </select>\r\n      </div>\r\n\r\n      <style jsx>{`\r\n      button {\r\n        height: 30px;\r\n        width: 80px;\r\n      }\r\n      .text {\r\n        width: 80%;\r\n        height: 40px;\r\n        font-size: 32px;\r\n      }\r\n      label {display: block;}\r\n      #histories {width: 80%;}\r\n      `}</style>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NativeSpeaker;","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nexport default function ButtonToConvertToTextFileThenDownload(props) {\r\n  const {children, text} = props\r\n  const downloadTextFile = () => {\r\n    const a = document.createElement('a');\r\n    a.href = 'data:text/plain,' + encodeURIComponent(text);\r\n    a.download = `log${moment().format('_YYYYMMDD_HHmmss')}.txt`;\r\n    a.click();\r\n  }\r\n\r\n   return (<button onClick={downloadTextFile}>{children}</button>)\r\n}","import React, { useState, useEffect, useRef } from 'react';\r\nimport './App.css';\r\nimport SpeechDaemon from './SpeechDaemon';\r\nimport styles from './AppStyles';\r\nimport MicrophoneSwitch from './components/MicrophoneSwitch';\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faMicrophone, faPlayCircle, faStopCircle, faVolumeUp, faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport { faCircle } from '@fortawesome/free-regular-svg-icons';\r\nimport NativeSpeaker from './components/NativeSpeaker';\r\nimport { CorrectSign, IncorrectSign } from './components/app-icons';\r\nimport ButtonToConvertToTextFileThenDownload from './components/ButtonToConvertToTextFileThenDownload';\r\n\r\nlibrary.add(faMicrophone, faPlayCircle, faStopCircle, faVolumeUp, faCircle, faTimes)\r\n\r\nvar langs =\r\n[['Afrikaans',       ['af-ZA']],\r\n ['አማርኛ',           ['am-ET']],\r\n ['Azərbaycanca',    ['az-AZ']],\r\n ['বাংলা',            ['bn-BD', 'বাংলাদেশ'],\r\n                     ['bn-IN', 'ভারত']],\r\n ['Bahasa Indonesia',['id-ID']],\r\n ['Bahasa Melayu',   ['ms-MY']],\r\n ['Català',          ['ca-ES']],\r\n ['Čeština',         ['cs-CZ']],\r\n ['Dansk',           ['da-DK']],\r\n ['Deutsch',         ['de-DE']],\r\n ['English',         ['en-AU', 'Australia'],\r\n                     ['en-CA', 'Canada'],\r\n                     ['en-IN', 'India'],\r\n                     ['en-KE', 'Kenya'],\r\n                     ['en-TZ', 'Tanzania'],\r\n                     ['en-GH', 'Ghana'],\r\n                     ['en-NZ', 'New Zealand'],\r\n                     ['en-NG', 'Nigeria'],\r\n                     ['en-ZA', 'South Africa'],\r\n                     ['en-PH', 'Philippines'],\r\n                     ['en-GB', 'United Kingdom'],\r\n                     ['en-US', 'United States']],\r\n ['Español',         ['es-AR', 'Argentina'],\r\n                     ['es-BO', 'Bolivia'],\r\n                     ['es-CL', 'Chile'],\r\n                     ['es-CO', 'Colombia'],\r\n                     ['es-CR', 'Costa Rica'],\r\n                     ['es-EC', 'Ecuador'],\r\n                     ['es-SV', 'El Salvador'],\r\n                     ['es-ES', 'España'],\r\n                     ['es-US', 'Estados Unidos'],\r\n                     ['es-GT', 'Guatemala'],\r\n                     ['es-HN', 'Honduras'],\r\n                     ['es-MX', 'México'],\r\n                     ['es-NI', 'Nicaragua'],\r\n                     ['es-PA', 'Panamá'],\r\n                     ['es-PY', 'Paraguay'],\r\n                     ['es-PE', 'Perú'],\r\n                     ['es-PR', 'Puerto Rico'],\r\n                     ['es-DO', 'República Dominicana'],\r\n                     ['es-UY', 'Uruguay'],\r\n                     ['es-VE', 'Venezuela']],\r\n ['Euskara',         ['eu-ES']],\r\n ['Filipino',        ['fil-PH']],\r\n ['Français',        ['fr-FR']],\r\n ['Basa Jawa',       ['jv-ID']],\r\n ['Galego',          ['gl-ES']],\r\n ['ગુજરાતી',           ['gu-IN']],\r\n ['Hrvatski',        ['hr-HR']],\r\n ['IsiZulu',         ['zu-ZA']],\r\n ['Íslenska',        ['is-IS']],\r\n ['Italiano',        ['it-IT', 'Italia'],\r\n                     ['it-CH', 'Svizzera']],\r\n ['ಕನ್ನಡ',             ['kn-IN']],\r\n ['ភាសាខ្មែរ',          ['km-KH']],\r\n ['Latviešu',        ['lv-LV']],\r\n ['Lietuvių',        ['lt-LT']],\r\n ['മലയാളം',          ['ml-IN']],\r\n ['मराठी',             ['mr-IN']],\r\n ['Magyar',          ['hu-HU']],\r\n ['ລາວ',              ['lo-LA']],\r\n ['Nederlands',      ['nl-NL']],\r\n ['नेपाली भाषा',        ['ne-NP']],\r\n ['Norsk bokmål',    ['nb-NO']],\r\n ['Polski',          ['pl-PL']],\r\n ['Português',       ['pt-BR', 'Brasil'],\r\n                     ['pt-PT', 'Portugal']],\r\n ['Română',          ['ro-RO']],\r\n ['සිංහල',          ['si-LK']],\r\n ['Slovenščina',     ['sl-SI']],\r\n ['Basa Sunda',      ['su-ID']],\r\n ['Slovenčina',      ['sk-SK']],\r\n ['Suomi',           ['fi-FI']],\r\n ['Svenska',         ['sv-SE']],\r\n ['Kiswahili',       ['sw-TZ', 'Tanzania'],\r\n                     ['sw-KE', 'Kenya']],\r\n ['ქართული',       ['ka-GE']],\r\n ['Հայերեն',          ['hy-AM']],\r\n ['தமிழ்',            ['ta-IN', 'இந்தியா'],\r\n                     ['ta-SG', 'சிங்கப்பூர்'],\r\n                     ['ta-LK', 'இலங்கை'],\r\n                     ['ta-MY', 'மலேசியா']],\r\n ['తెలుగు',           ['te-IN']],\r\n ['Tiếng Việt',      ['vi-VN']],\r\n ['Türkçe',          ['tr-TR']],\r\n ['اُردُو',            ['ur-PK', 'پاکستان'],\r\n                     ['ur-IN', 'بھارت']],\r\n ['Ελληνικά',         ['el-GR']],\r\n ['български',         ['bg-BG']],\r\n ['Pусский',          ['ru-RU']],\r\n ['Српски',           ['sr-RS']],\r\n ['Українська',        ['uk-UA']],\r\n ['한국어',            ['ko-KR']],\r\n ['中文',             ['cmn-Hans-CN', '普通话 (中国大陆)'],\r\n                     ['cmn-Hans-HK', '普通话 (香港)'],\r\n                     ['cmn-Hant-TW', '中文 (台灣)'],\r\n                     ['yue-Hant-HK', '粵語 (香港)']],\r\n ['日本語',           ['ja-JP']],\r\n ['हिन्दी',             ['hi-IN']],\r\n ['ภาษาไทย',         ['th-TH']]];\r\n\r\nif(!Array.prototype.skip) {\r\n  Array.prototype.skip = function(n) {\r\n    if(n < 1) return this\r\n    return this.filter((v, i) => i > (n - 1))\r\n  }  \r\n}\r\n\r\nconst getVoices = (arg) => {\r\n  return window.speechSynthesis.getVoices().filter(arg || (voice => voice))\r\n}\r\nconst getVoiceByName = (name) => {\r\n  return getVoices(voice => voice.name === name)[0]\r\n}\r\nconst indexOfLangsByLocale = (locale) => {\r\n  return langs.reduce((ax, lang, i) => {\r\n    const exists = lang.skip(1).reduce((xs, x) => {\r\n      xs.push(x[0]);\r\n      return xs;\r\n    }, []).includes(locale)\r\n\r\n    \r\n    if(exists) {\r\n      ax = i\r\n      console.log(`exists ${i}`)\r\n    }\r\n    return ax\r\n  }, null)\r\n}\r\nconst isAndroid = () => /(android)/i.test(navigator.userAgent)\r\n\r\nfunction App() {\r\n  const speechLog = useRef('');\r\n  const speech = useRef();\r\n  const [selectedIndex, setSelectedIndex] = useState(null);\r\n  const [dialect, setDialect] = useState();\r\n  const [finalTranscript, setFinalTranscript] = useState('');\r\n  const [interimTranscript, setInterimTranscript] = useState('');\r\n  const [isPowerOn, setIsPowerOn] = useState(false);\r\n  const [voices, setVoices] = useState([]);\r\n  const [selectedVoice, setSelectedVoice] = useState(null);\r\n  const [sentence, setSentence] = useState(\"Enter the example sentence!\");\r\n  const [rate, setRate] = useState(1);\r\n  const [volume, setVolume] = useState(1);\r\n\r\n  const setDefautVoice = () => {\r\n    // 日本語と英語以外の声は選択肢に追加しない。\r\n    const voices = getVoices(voice => voice.lang.match('ja|en[-_]US')).reverse()\r\n    const defautVoice = voices.filter(voice => voice.lang.match('en[-_]US') /*&& /^google/i.test(voice.name)*/)[0]\r\n    defautVoice && setSelectedVoice(defautVoice)\r\n    setVoices(voices)\r\n  }\r\n  const initialize = _ => {\r\n    console.log('初期化処理')\r\n    speech.current = new SpeechDaemon()\r\n    speech.current.on('result', (event) => {\r\n      let transcript = ''\r\n      let buf = ''\r\n      for (let i = event.resultIndex; i < event.results.length; i++) {\r\n        transcript = event.results[i][0].transcript;\r\n        if (event.results[i].isFinal && (!isAndroid() || event.results[i][0].confidence > 0)) {\r\n          if (speech.current.lang === 'ja-JP') {\r\n            transcript += '。';\r\n          }\r\n          speechLog.current += transcript + '\\n'\r\n          console.log(speechLog.current)\r\n          setFinalTranscript(speechLog.current)\r\n        } else {\r\n          buf += transcript\r\n        }\r\n        setInterimTranscript(buf)\r\n      }\r\n    })\r\n    .on('start', () => {\r\n      console.log(\"話しかけてみて\")\r\n    }).on('soundstart', () => {\r\n      console.log(\"認識中...\")\r\n    }).on('soundend', () => {\r\n      console.log(\"停止中\")\r\n    }).on('nomatch', (event) => {\r\n      console.log('音声を認識できませんでした')\r\n    }).on('error', (event) => {\r\n      console.log('エラー: ' + event.error)\r\n    })\r\n\r\n    window.speechSynthesis.onvoiceschanged = _ => {\r\n      console.log('onvoiceschanged')\r\n      setDefautVoice()\r\n    }\r\n    setDefautVoice()\r\n  }\r\n  \r\n  useEffect(initialize, [])\r\n\r\n  useEffect(_ => {\r\n    console.log('changed selectedVoice')\r\n    if(!selectedVoice) return\r\n\r\n    const i = indexOfLangsByLocale(selectedVoice.lang.replace('_', '-'))\r\n    setSelectedIndex(i)\r\n\r\n    setDialect(langs[i].filter((a, j) => j > 0).reduce((xs, x) => {\r\n      if(x[0] === selectedVoice.lang.replace('_', '-')) xs = x\r\n      return xs\r\n    })[0])\r\n  }, [selectedVoice])\r\n\r\n  if(!selectedVoice || !selectedIndex) {\r\n    console.log('音声取得中')\r\n    return (<>音声取得中</>)\r\n  }\r\n\r\n  const hasDialect = langs[selectedIndex][1].length > 1\r\n\r\n  if(isPowerOn) {\r\n    console.log('Microphone On')\r\n    speech.current.lang = dialect\r\n    speech.current.listen()\r\n  } else {\r\n    console.log('onMicrophone Off')\r\n    speech.current.kill()\r\n  }\r\n\r\n  const latelyTranscript = (n) => {\r\n    return finalTranscript.split('\\n')\r\n      .filter(x => x.length > 0)\r\n      .slice(-1 * n)\r\n      .map((x, i) => <p key={i}>{x}</p>)\r\n  }\r\n\r\n  const judgment = (_ => {\r\n    const phrases = speechLog.current.split('\\n').filter(x => x.length > 0)\r\n    if(phrases.length > 0) {\r\n      const pattern = new RegExp(/[\\s!,\\.、。]/, 'g')\r\n      const [actual, expected] = [phrases.pop(), sentence].map(x => x.replace(pattern, '').toLowerCase())\r\n      return (actual === expected) ? <CorrectSign /> : <IncorrectSign />\r\n    } else {\r\n      return (<></>)\r\n    }\r\n  })()\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <h1>英語の歌詞を正しく発音しているか判定します</h1>\r\n      <h2>お手本</h2>\r\n      <NativeSpeaker sentence={sentence}\r\n        selectedVoice={selectedVoice}\r\n        voices={voices}\r\n        onChangedSentence={e => setSentence(e.target.value)}\r\n        onChangeVoice={e => {\r\n          const voice = getVoiceByName(e.target.value)\r\n          setSelectedVoice(voice)\r\n          speech.current.lang = voice.lang\r\n          speech.current.restart()\r\n        }}\r\n        rate={rate} onChangedRate={e => setRate(e.target.value)}\r\n        volume={volume} onChangedVolume={e => setVolume(e.target.value)} />\r\n\r\n      {judgment}\r\n\r\n      <h2>発音確認</h2>\r\n      <div id=\"results\">\r\n        <span className=\"final\" id=\"final_span\">{latelyTranscript(10)}</span>\r\n        <span className=\"interim\" id=\"interim_span\" style={{color: \"gray\"}}>{interimTranscript}</span>\r\n      </div>\r\n\r\n      <div className=\"tools\">\r\n        <div>\r\n          <select disabled={true} value={selectedIndex}>\r\n          {\r\n            langs.map((x, i) => <option key={x[0]} value={i}>{x[0]}</option>)\r\n          }\r\n          </select>&nbsp;&nbsp; \r\n          <select disabled={true} value={dialect} style={{visibility: hasDialect ? 'visible' : 'hidden'}}>\r\n          {\r\n            langs[selectedIndex]\r\n              .filter((x, i) => i > 0)\r\n              .map((x ,i) => <option key={i} value={x[0]}>{x[1]||''}</option>)\r\n          }\r\n          </select>\r\n        </div>\r\n\r\n        <MicrophoneSwitch isPowerOn={isPowerOn}\r\n                          onClick={() => {setIsPowerOn(!isPowerOn)}} />\r\n\r\n        <div>\r\n          <ButtonToConvertToTextFileThenDownload text={finalTranscript}>\r\n            ログをダウンロード\r\n          </ButtonToConvertToTextFileThenDownload>\r\n        </div>\r\n      </div>\r\n      <style jsx>{styles}</style>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}